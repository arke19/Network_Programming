import random

suit = ["Diamonds", "Clubs", "Hearts", "Spades"]
value = ["Ace", 2, 3, 4, 5, 6, 7, 8, 9, 10, "Jack", "Queen", "King"]

class Card:

    def __init__(self, suit, value):
        assert 1 <= suit <= 4 and 1 <= value <= 13
        self._suit = suit
        self._value = value

    def getValue(self):
       return self._value
    def getSuit(self):
       return self._suit
    def __str__(self):
       return "{} of {}".format(value[self.getValue], suit[self.getSuit])
    
class CardDeck:
   def __init__(self):
      self.cards = []
      self.reset()

   def shuffle(self):
       random.shuffle(self.cards)

   def getCard(self):
       return self.cards.pop()

   def size(self):
       return len(self.cards)
       
   def reset(self):
      for values in range(1,14):
         for suits in range(1,5):
            self.cards.append(Card(suits, values))


"""
deck = CardDeck()
deck.shuffle()
while deck.size()>0:
   card = deck.getCard()
   print("Card {} has value {}".format(card, card.getValue()))"""

deck = CardDeck()
card = Card(1,1)
print(card.__str__())